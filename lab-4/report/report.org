#+SETUPFILE: /home/krutna/.emacs.d/org-mode/orgs/setup/setup.org
#+LANGUAGE: ru
#+AUTHOR: Krutko Nikita / KrutNA
#+OPTIONS: toc:nil
#+LATEX: \large
#+LATEX: \thispagestyle{empty}
#+BEGIN_CENTER
*Национальный Исследовательский Университет ИТМО*\\
*Факультет Программной Инженерии и Компьютерной Техники*\\
#+END_CENTER
#+LATEX: \vspace{2em}
#+ATTR_LATEX: :width 120pt
#+ATTR_ORG: :width 120px
file:itmo-logo.png
#+LATEX: \LARGE
#+LATEX: \vspace{5em}
#+BEGIN_CENTER
*Вариант №82100.147*\\
*Лабораторная работа №4*\\
#+LATEX: \Large
*по дисциплине*\\
#+LATEX: \LARGE
*/'Программирование'/*\\
#+END_CENTER
#+LATEX: \vspace{11em}
#+LATEX: \large
#+LATEX: \begin{flushright}
*Выполнил:*\\
*Студент группы P3113*\\
*/Крутько Никита/ : 242570*\\
*Преподаватель:*\\
*/Письмак Алексей Евгеньевич/*\\
#+LATEX: \end{flushright}
#+LATEX: \vspace{4em}
#+LATEX: \large
#+BEGIN_CENTER
*Санкт-Петербург 2019 г.*
#+END_CENTER
#+LATEX: \pagebreak{}
#+TOC: headlines 2
#+LATEX: \vspace{2em}
* Задание

** Программа должна удовлетворять следующим требованиям:
1. В программе должны быть реализованы 2 собственных класса исключений (checked и unchecked), а также обработка исключений этих классов.
2. В программу необходимо добавить использование локальных, анонимных и вложенных классов (static и non-static).

** Порядок выполнения работы:

1. Доработать объектную модель приложения.
2. Перерисовать диаграмму классов в соответствии с внесёнными в модель изменениями.
3. Согласовать с преподавателем изменения, внесённые в модель.
4. Модифицировать программу в соответствии с внесёнными в модель изменениями.

** Текст задания.

1. Текст задания.
2. Диаграмма классов объектной модели.
3. Исходный код программы.
4. Результат работы программы.
5. Выводы по работе.

** Принципы объектно-ориентированного программирования SOLID и STUPID.
1. Обработка исключительных ситуаций, три типа исключений.
2. Вложенные, локальные и анонимные классы.
3. Механизм рефлексии (reflection) в Java. Класс Class.

** Задание:
/И все они во главе с Кроликом пустились наутек. Пух посмотрел на свои передние лапки. Он знал, что одна из них была правая, знал он, кроме того, что если он решит, какая из них правая, то остальная будет левая. Но он никак не мог вспомнить, с чего надо начать. Они пошли. Спустя десять минут они снова остановились. Пух сказал, что заметил. Пятачок чуточку приотстал и подобрался к Пуху сзади. Когда Тигра перестал ждать, что остальные найдут его, и когда ему надоело, что рядом нет никого, кому он мог бы сказать: "Эй, пошли, что ли!"-- он подумал, что надо пойти домой. И он побежал назад. Первое, что сказала Кенга, увидав его, это: "А вот и наш милый Тигра! Как раз пора принимать рыбий жир!" И она налила ему полную чашку. Крошка Ру с гордостью заявил: "А я уже принял", и Тигра, проглотив все, что было в чашке, сказал: "И я тоже", а потом он и Ру стали дружески толкать друг друга, и Тигра случайно перевернул один или два стула, нечаянно, а Крошка Ру случайно перевернул один, нарочно, и Кенга сказала: И они послушно отправились к Шести Соснам и стали кидать друг в друга шишками, и за этим приятным занятием забыли, зачем они пришли в Лес, и забыли заодно корзинку под деревом, а сами отправились домой обедать. Обед как раз подходил к концу, когда Кристофер Робин заглянул в дверь. Тигра стал объяснять, что произошло, и в то же самое время Крошка Ру стал объяснять про свой бисквитный Кашель, а Кенга стала уговаривать их не говорить одновременно. Так что прошло немало времени, пока Кристофер Робин понял, что Пух, Пятачок и Кролик бродят где-то в тумане, заблудившись в Лесной Чаще. Все трое отдыхали в маленькой ямке с песком. Пуху ужасно надоела эта ямка с песком, и он серьезно подозревал, что она просто-таки бегает за ними по пятам, потому что, куда бы они ни направились, они обязательно натыкались на нее. Каждый раз, когда она появлялась из тумана, Кролик торжествующе заявлял: "Теперь я знаю, где мы!", а Пух грустно говорил: "Я тоже"./

* Исходный код
se.ifmo.ru/~s242570/labs/prog/4/

* Вывод
<<<<<<< HEAD
В ходе лабораторной работы я познакомился с интерфейсами, абстрактными классами и енамами. Попытался в dependency injection, не разобрался и сделал без него :с.
=======
В ходе лабораторной работы я изучил механизмы рефлексии, использовал совсем не нужные в контексте данной задачи локальные классы, сделал SOLID'но.
>>>>>>> ed874cd9065882ea3d4c640af5609950f2e716f5
